<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.spring.board.BoardMapper">
	
	<select id="boardList" resultType="com.spring.board.dto.boardVO">
		select*from test.new_table
		order by bo_no ASC
		limit 0,10
	</select>

	
	<insert id="boardWrite" parameterType="com.spring.board.dto.boardVO">
		INSERT 
          INTO test.new_table 
             (
                  name
                  ,title
                  ,time
                  ,date
                  ,bo_no
                  ,content
                  ,file_name
              ) 
        VALUES 
             (
                #{name}
                , #{title}
                , NOW()
                , NOW() 
                , 0
                ,#{content}
                ,#{file_name}
              )
	</insert>
	
	
	<select id="boardDetail" resultType="com.spring.board.dto.boardVO">
		select name,title,time,date,bo_no,content,file_name
		from test.new_table where bo_no = #{bo_no}
	</select>
	
	<delete id="boardDelete">
    	delete from test.new_table
    	where bo_no=#{bo_no}
    </delete>
    
    <update id="boardUpdate" parameterType="com.spring.board.dto.boardVO">
    
        UPDATE test.new_table 
           SET title = #{title}
             , content= #{content}
             , name = #{name}
             , date = NOW()
             ,time=NOW()
         WHERE bo_no = #{bo_no}
    </update>
    
	
	<select id="count" resultType="int">
		select count(bo_no) from test.new_table
	</select>
	
	<select id="listPage" parameterType="hashMap" resultType="com.spring.board.dto.boardVO">
		select*from test.new_table
		order by bo_no DESC
		limit #{displayPost}, #{postNum}
	</select>
	
	    
    <select id="listPageSearch" parameterType="hashMap" resultType="com.spring.board.dto.boardVO">
		 select
		  		bo_no
		  		,title
		  		,name
		  		,date,time
		 from 
		 	test.new_table
		 
		 <if test='searchType.equals("title")'>
		  WHERE title LIKE CONCAT('%', #{keyword}, '%')
		 </if>
		 
		 <if test='searchType.equals("content")'>
		  WHERE content LIKE CONCAT('%', #{keyword}, '%')
		 </if>
		 
		 <if test='searchType.equals("title_content")'>
		  WHERE title LIKE CONCAT('%', #{keyword}, '%') 
		   or content LIKE CONCAT('%', #{keyword}, '%')
		 </if>
		 
		 <if test='searchType.equals("writer")'>
		  WHERE name LIKE CONCAT('%', #{keyword}, '%')
		 </if>
		 
		 order by bo_no DESC
		  limit #{displayPost}, #{postNum}
	</select> 
	
	<select id="searchCount" parameterType="hashMap" resultType="int">
		 select count(bo_no) from test.new_table 
		   WHERE
		   	1=1
		 <if test='searchType.equals("title")'>
		  and title LIKE CONCAT('%', #{keyword}, '%')
		 </if>
		 
		 <if test='searchType.equals("content")'>
		  and content LIKE CONCAT('%', #{keyword}, '%')
		 </if>
		 
		 <if test='searchType.equals("title_content")'>
		  and title LIKE CONCAT('%', #{keyword}, '%') 
		   or content LIKE CONCAT('%', #{keyword}, '%')
		 </if>
		 
		 <if test='searchType.equals("writer")'>
		  and name LIKE CONCAT('%', #{keyword}, '%')
		 </if>
 	</select>
 	
 	<select id="replyCount" resultType="int">
 		select count(rno) from test.tbi_reply
 		where bno=#{bno}
 	</select>
   
</mapper>